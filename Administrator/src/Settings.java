
import com.administrator.DBConnection.ConnectionParameters;
import com.mysql.jdbc.Connection;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/*
 *Settings class is used to except clients from automatic shutdown.
 * And also to add them back to list.
 * By default in automatic shut down all clients are shut down. 
 * @author AkhilaAnchu
 */
public class Settings extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    private DefaultListModel listModel3;
    private Connection hcon;

    public Settings() {
        this.setResizable(false);
        initComponents();
        jLabel9.setVisible(false);
        listModel3 = new javax.swing.DefaultListModel();
        jList3.setModel(listModel3);
        list3add();
        
        /*
         * MouseListener is added to list displaying all registered clients.
         * This is to select and remove from shut down list.
         */
        jList3.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                jList3MouseClicked(evt);

            }
        });

    }

    /*
     * To select an item i.e. client from shut down list
     * and set to TextField for removing.
     */
    private void jList3MouseClicked(MouseEvent evt) {
        int index = 2;
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2) {
            index = list.locationToIndex(evt.getPoint());
            String listitem = list.getModel().getElementAt(index).toString();

            jTextField1.setText(listitem);

        }
    }

     /*
     * Method addtolist reads all registered clients from database with A=1
     * and add to list of shutdown clients.
     * 
     */
    void list3add() {
        try {
            if (hcon == null) {
                hcon = (Connection) ConnectionParameters.getCon();
            }
            java.sql.PreparedStatement st = hcon.prepareStatement("SELECT * FROM clients where A= 1");
            ResultSet R = st.executeQuery();
            listModel3.clear();
            while (R.next()) {
                String ip = R.getString("IP");
                listModel3.addElement(ip);
                System.out.println(ip);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jScrollPane4.setViewportView(jList3);

        jButton7.setText("ADD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton3.setText("REMOVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Client doesn't exist");

        jLabel11.setText("List of clients to be shutted down");

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton3))
                        .addGap(42, 42, 42)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 2, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
     * jButton7-ADD
     * Used to add clients to shut down list
     *      -Add to list showing shutdown clients
     *      -Update database table clients
     *      -If already registered client is added error message diaplayed.
     *      -Also if not a registered client error message displayed
     */ 
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String name = null;
            int f = 0,fl=1;
            String ip = jTextField1.getText();
            System.out.println(ip);
            if (hcon == null) {
                hcon = (Connection) ConnectionParameters.getCon();
            }
            java.sql.PreparedStatement st = hcon.prepareStatement("SELECT * FROM CLIENTS");
            ResultSet R = st.executeQuery();
            while (R.next()) {
                name = R.getString("IP");
                int a=R.getInt("A");
                if (ip.equals(name)) {
                    f = 1;
                    if(a==1)
                        fl=0;
                }
            }
            if (f == 1&&fl==1) {
                jLabel9.setVisible(false);
                listModel3.addElement(jTextField1.getText());
                String insertTableSQL = "UPDATE CLIENTS SET A=" + "(?)" + " WHERE IP=" + "(?)";
                java.sql.PreparedStatement stmt = hcon.prepareStatement(insertTableSQL);
                stmt.setString(2, ip);
                stmt.setInt(1, 1);
                stmt.executeUpdate();

            }

            if (f == 0) {
                JOptionPane.showMessageDialog(null,"NO SUCH CLIENT");
            }
            else if(fl==0)
                JOptionPane.showMessageDialog(null,"CLIENT ALREADY ADDED");

        } catch (Exception e) {
            System.out.println(e);
        }
        jTextField1.setText(null);
       
    }//GEN-LAST:event_jButton7ActionPerformed

  /*
     * jButton3-Remove
     * Used to remove clients from shut down list
     *      -Removed from list and update database
     *      -Removed only if such a client added
     *      -if tried to remove aclient not yet added warning-"NOT YET ADDED"
     */     
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            int flag = 0;
            String nam = null;
            String ip = jTextField1.getText();
            if (hcon == null) {
                hcon = (Connection) ConnectionParameters.getCon();
            }
            java.sql.PreparedStatement st = hcon.prepareStatement("SELECT * FROM CLIENTS");
            ResultSet R = st.executeQuery();
            while (R.next()) {
                nam = R.getString("IP");

                if (ip.equals(nam)) {
                    flag = 1;
                }
            }
            if (flag == 1) {
                jLabel9.setVisible(false);
                listModel3.removeElement(jTextField1.getText());
                String deleteTableSQL = "UPDATE CLIENTS SET A=0 WHERE IP=" + "(?)";
                java.sql.PreparedStatement stmt = hcon.prepareStatement(deleteTableSQL);
                stmt.setString(1, jTextField1.getText());
                stmt.executeUpdate();
               
            } else {
                JOptionPane.showMessageDialog(null,"NOT ADDED YET");
            }
        } catch (Exception ex) {
             System.out.println(ex);
        }
        jTextField1.setText(null);
        
    }//GEN-LAST:event_jButton3ActionPerformed
/*
 * To go back to automatic shutdown
 * i.e the page from which settings called.
 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /*Main method
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaBlueMoonLookAndFeel");
                  new Settings().setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList3;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
